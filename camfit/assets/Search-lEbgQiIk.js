import { _ as N, r as I, o as a, c as d, a as i, b as s, w as f, F as z, d as $, e as S, i as U, f as m, g as V, h as P, v as D, n as H, t as b, j as L, p as K, k as F, R as X, l as j, m as G, L as Q, q as E } from "./index-8fRpFh2w.js"; const Z = "/portfolio/camfit/assets/logo-camfit-lSdFIJYV.svg", tt = { name: "SearchOption", props: { dataArr: { type: Array, required: !1 } }, setup() { const l = I({ value: "popular" }), r = I({ group: "location", indexArr: [], title: "전국 지역" }), t = I({ group: "popular", indexArr: [], title: "인기 캠핑 지역" }), n = I({ group: "concept", indexArr: [], title: "캠핑장 분류" }), g = I({ group: "nature", indexArr: [], title: "자연환경" }), w = I({ group: "animal", indexArr: [], title: "반려동물동반 여부" }), p = [r, t], h = [n, g, w], k = [r, t, n, g, w], o = U("findArr"); return { findArr: o, locationBtn: l, optRadioBtn: p, optCheckBox: h, selected: k, unselect: () => { const v = document.querySelectorAll(".keyword-btn"); for (let u of v) u.classList.remove("select"); for (let u of k) u.indexArr = []; }, selectAll: () => { const v = document.querySelectorAll(".keyword-btn"); for (let u of v) u.classList.add("select"); for (let u of p) for (let _ in o[u.group]) { if (u.group != l.value) break; u.indexArr.push(parseInt(_)); } for (let u of h) for (let _ in o[u.group]) u.indexArr.push(parseInt(_)); for (let u of k) { let _ = new Set; for (let B of u.indexArr) _.add(B); u.indexArr = [..._]; } }, radioToggle: v => { for (let u of p) v != l.value && (u.indexArr = []); } }; } }, et = l => (K("data-v-37e7d3b8"), l = l(), F(), l), ot = { class: "container" }, at = et(() => i("div", { class: "title-wrap" }, [i("h1", null, [i("img", { class: "logo", src: Z, alt: "캠핏" })]), i("p", { class: "desc" }, [S("키워드를 선택하여"), i("br"), S("나만의 캠핑장을 찾아보세요")])], -1)), st = { class: "option-wrap" }, nt = { class: "btn-box" }, lt = { class: "btn-wrap" }, rt = ["id", "onUpdate:modelValue", "value"], ct = ["for"], it = { class: "category-wrap" }, dt = { class: "category-title" }, mt = { class: "btn-box" }, pt = { class: "btn-wrap" }, ut = ["id", "onUpdate:modelValue", "value"], _t = ["for"], ft = { class: "search-btn-wrap" }; function ht(l, r, t, n, g, w) { const p = m("v-radio"), h = m("v-radio-group"), k = m("v-btn"), o = m("v-icon"); return a(), d("div", ot, [at, i("div", st, [s(h, { inline: "", modelValue: n.locationBtn.value, "onUpdate:modelValue": r[0] || (r[0] = e => n.locationBtn.value = e) }, { default: f(() => [(a(!0), d(z, null, $(n.optRadioBtn, e => (a(), V(p, { label: e.title, value: e.group, color: "green-lighten-1", onClick: c => n.radioToggle(e.group) }, null, 8, ["label", "value", "onClick"]))), 256))]), _: 1 }, 8, ["modelValue"]), (a(!0), d(z, null, $(n.optRadioBtn, e => (a(), d("div", nt, [n.locationBtn.value == e.group ? (a(!0), d(z, { key: 0 }, $(n.findArr[e.group], (c, y) => (a(), d("span", lt, [P(i("input", { type: "checkbox", id: c.id, "onUpdate:modelValue": v => e.indexArr = v, value: y }, null, 8, rt), [[D, e.indexArr]]), i("label", { for: c.id, class: H(["keyword-btn", e.indexArr.includes(y) ? "select" : ""]) }, b(c.icon) + b(c.keyword), 11, ct)]))), 256)) : L("", !0)]))), 256)), (a(!0), d(z, null, $(n.optCheckBox, e => (a(), d("div", it, [i("h4", dt, b(e.title), 1), i("div", mt, [(a(!0), d(z, null, $(n.findArr[e.group], (c, y) => (a(), d("span", pt, [P(i("input", { type: "checkbox", id: c.id, "onUpdate:modelValue": v => e.indexArr = v, value: y }, null, 8, ut), [[D, e.indexArr]]), i("label", { for: c.id, class: H(["keyword-btn", e.indexArr.includes(y) ? "select" : ""]) }, b(c.icon) + b(c.keyword), 11, _t)]))), 256))])]))), 256))]), i("div", ft, [s(k, { class: "allselect-btn", onClick: n.selectAll, size: "large", variant: "flat" }, { default: f(() => [S("전체선택")]), _: 1 }, 8, ["onClick"]), s(k, { class: "unselect-btn", onClick: n.unselect, size: "large", variant: "flat" }, { default: f(() => [s(o, { icon: "mdi-restore" }), S("초기화 ")]), _: 1 }, 8, ["onClick"]), s(k, { block: "", class: "search-btn", onClick: r[1] || (r[1] = e => l.emitter.emit("findKeyword", n.selected)), size: "large", variant: "flat" }, { default: f(() => [s(o, { class: "search-icon", icon: "mdi-magnify" }), S("검색하기")]), _: 1 })])]); } const gt = N(tt, [["render", ht], ["__scopeId", "data-v-37e7d3b8"]]), vt = "/portfolio/camfit/assets/no-result-HSAcox1t.svg", kt = { name: "SearchResult", components: { RouterView: X }, props: { dataArr: { type: Array, required: !1 }, items: { type: Array, required: !1 } }, methods: { load() { this.dataArr.length >= this.items.length + 10 ? this.items.push(...Array.from({ length: 10 }, (l, r) => r + this.items.at(-1) + 1)) : this.items.push(...Array.from({ length: this.dataArr.length - this.items.length }, (l, r) => r + this.items.at(-1) + 1)); }, makeKeyword(l, r) { let t = ["animalCmgCl", "brazierCl", "induty", "lctCl", "sbrsCl", "sbrsEtc", "posblFcltyCl"], n = []; return t.forEach((w, p) => { let h = l[r][w].split(","); p == 0 ? h[0] = "반려동물동반 " + h : p == 1 && (h[0] = h + "화로대"), n.push(...h); }), n.filter(Boolean); } } }, wt = l => (K("data-v-d1fe59e9"), l = l(), F(), l), At = { class: "result-info" }, bt = { key: 0 }, yt = { key: 1 }, Ct = { class: "camping-title" }, St = { class: "camping-title-icon" }, xt = { key: 0, class: "camping-subtitle" }, Vt = { key: 1, class: "camping-desc" }, It = { class: "camping-contact-wrap" }, Lt = { key: 0, class: "camping-contact" }, zt = { class: "camping-contact-addr" }, Bt = { key: 1, class: "camping-contact" }, Mt = { class: "camping-contact-tel" }, $t = { class: "camping-facility" }, Rt = { class: "camping-facility-item" }, Ut = { key: 0, class: "result-more" }, Nt = { key: 0, class: "result-more-end" }, Ot = { key: 1, class: "result-none" }, Tt = wt(() => i("img", { src: vt, alt: "" }, null, -1)), qt = [Tt]; function Et(l, r, t, n, g, w) { const p = m("v-icon"), h = m("router-link"), k = m("v-img"), o = m("v-col"), e = m("v-row"), c = m("v-btn"), y = m("v-infinite-scroll"), v = m("RouterView"); return a(), d(z, null, [i("div", At, [t.dataArr.length == 0 ? (a(), d("p", bt, [s(p, { class: "result-info-icon", icon: "mdi-alert-circle-outline" }), S(" 선택하신 조건에 맞는 캠핑장이 없습니다. 조건을 다시 선택 후 검색해주세요. ")])) : (a(), d("p", yt, [s(p, { class: "result-info-icon", icon: "mdi-magnify" }), S(" 캠핑장 "), i("strong", null, b(t.dataArr.length) + "곳", 1), S("을 소개해드리겠습니다 ")]))]), s(y, { class: "result-list" }, { default: f(() => [(a(!0), d(z, null, $(t.items, (u, _) => (a(), V(e, { key: u, class: "camping-wrap" }, { default: f(() => [s(o, { cols: "12", md: "7" }, { default: f(() => [s(h, { to: { name: "search/id", params: { id: t.dataArr[_].contentId }, state: { arr: t.dataArr } } }, { default: f(() => [i("h3", Ct, b(t.dataArr[_].facltNm), 1), i("span", St, [s(p, { end: "", icon: "mdi-open-in-new" }), S(" 자세히 보기 ")])]), _: 2 }, 1032, ["to"]), t.dataArr[_].firstImageUrl ? (a(), V(k, { key: 0, class: "camping-img", "aspect-ratio": "2", src: t.dataArr[_].firstImageUrl, cover: "" }, null, 8, ["src"])) : (a(), V(k, { key: 1, class: "camping-img", "aspect-ratio": "2", src: "https://github.com/suunzuu/portfolio/blob/main/img/no-img.jpg?raw=true", alt: "캠핑장 이미지 준비중", cover: "" }))]), _: 2 }, 1024), s(o, { cols: "12", md: "5", class: "camping-desc-wrap pt-0 pt-md-12" }, { default: f(() => [t.dataArr[_].lineIntro ? (a(), d("p", xt, b(t.dataArr[_].lineIntro), 1)) : L("", !0), t.dataArr[_].featureNm ? (a(), d("p", Vt, b(t.dataArr[_].featureNm), 1)) : L("", !0), i("div", It, [t.dataArr[_].addr1 ? (a(), d("span", Lt, [s(p, { icon: "mdi-map-marker", class: "camping-contact-icon" }), i("span", zt, b(t.dataArr[_].addr1), 1)])) : L("", !0), t.dataArr[_].tel ? (a(), d("span", Bt, [s(p, { icon: "mdi-phone", class: "camping-contact-icon" }), i("span", Mt, b(t.dataArr[_].tel), 1)])) : L("", !0)]), i("div", $t, [(a(!0), d(z, null, $(w.makeKeyword(t.dataArr, _), B => (a(), d("span", Rt, b(B), 1))), 256))])]), _: 2 }, 1024)]), _: 2 }, 1024))), 128)), t.dataArr.length != 0 ? (a(), d("div", Ut, [t.dataArr.length <= t.items.length ? (a(), d("p", Nt, [s(p, { class: "mt-n2", icon: "mdi-check-bold" }), S(" 마지막 검색 결과 입니다 ")])) : (a(), V(c, { key: 1, class: "result-more-btn", onClick: j(w.load, ["stop"]), flat: "", size: "x-large" }, { default: f(() => [S(" 검색결과 더보기 "), s(p, { icon: "mdi-plus-thick" })]), _: 1 }, 8, ["onClick"]))])) : L("", !0), t.dataArr.length == 0 ? (a(), d("div", Ot, qt)) : L("", !0)]), _: 1 }), s(v)], 64); } const jt = N(kt, [["render", Et], ["__scopeId", "data-v-d1fe59e9"]]), Y = l => (K("data-v-a927cbe7"), l = l(), F(), l), Kt = { class: "result-info" }, Ft = Y(() => i("div", { id: "map" }, "캠핑지도", -1)), Pt = { class: "select-location-wrap" }, Dt = Y(() => i("h3", { class: "select-location-title mb-7" }, "관심있는 캠핑지역을 선택해 지도로 확인해 보세요", -1)), Ht = { key: 0, class: "pop-info" }, Yt = { key: 1, class: "pop-info" }, Jt = { name: "ShowMap", data() { return { drawer: null, dialog: !1 }; } }, Wt = Object.assign(Jt, {
  setup(l) {
    const r = U("dataArrAll"), t = U("findArr"), n = []; for (let o of t.location) n.push(o.keyword); const g = I({ select: "" }), w = o => { const e = []; for (let c of r) c.doNm == o && e.push(c); k(e); }, p = I({ isLoading: !1 }), h = () => { console.log("loadScript실행"); const o = document.createElement("script"); document.createElement("type"), o.src = "//dapi.kakao.com/v2/maps/sdk.js?appkey=68a864de58e6edc8060b1ea8bf5fcdf1&autoload=false&libraries=clusterer", o.type = "text/javascript", o.onload = () => window.kakao.maps.load(k), document.head.appendChild(o); }, k = o => {
      setTimeout(() => {
        if (p.isLoading = !0, o) {
          let T = function (A, M, R) { return function () { C[M] ? (R.setMap(A), C[M] = !C[M]) : (R.setMap(null), C[M] = !C[M]); }; }, J = function (A) { return function () { A.setMap(null), C.fill = !0; }; }; console.log("loadMap실행", o); const e = new window.kakao.maps.LatLng(36.2683, 127.6358), c = document.getElementById("map"), y = { center: e, level: 13 }; let v = new window.kakao.maps.Map(c, y); const u = [], _ = "/portfolio/camfit/assets/marker.svg", B = new window.kakao.maps.Size(40, 55), O = { offset: new window.kakao.maps.Point(0, 70) }, x = new window.kakao.maps.MarkerImage(_, B, O); o.forEach((A, M) => {
            const R = new window.kakao.maps.Marker({ map: v, position: new window.kakao.maps.LatLng(A.mapY, A.mapX), clickable: !0, image: x }); u.push(R); const W = ` <div class="custom-wrap pa-3">
              <div class="custom-title-wrap  pb-1 mb-2">
                <h5 class="custom-title">${A.facltNm}</h5>
                <p class="custom-addr mt-n1">${A.addr1}</p>
              </div>
              <div class="custom-desc-wrap">
                <div class="custom-img">
                  <img src="${A.firstImageUrl}" alt="캠핑장 이미지" /> 
                </div>
                <div class="custom-desc-box pt-1">
                  <div class="custom-desc mb-1">
                    <span class="custom-desc-icon material-symbols-outlined">camping</span> 
                    <p>${A.induty}</p>
                  </div>
                  <div class="custom-desc">
                    <span class="custom-desc-icon material-symbols-outlined">pets</span>
                    <p>반려동물 동반 ${A.animalCmgCl}</p>
                  </div>
                  <div class="custom-desc">
                    <span class="custom-desc-icon material-symbols-outlined">settings_heart</span>
                    <p> ${A.sbrsCl}</p>
                  </div>
                  <div class="custom-desc">
                    <span class="material-symbols-outlined">calendar_month</span>
                    <p> ${A.operDeCl}</p>
                  </div>
                </div>
              </div>
              </div>`, q = new window.kakao.maps.CustomOverlay({ map: v, position: R.getPosition(), content: W, zIndex: 1e4, xAnchor: 0, yAnchor: 0 }); q.setMap(null), kakao.maps.event.addListener(R, "click", T(v, M, q)), kakao.maps.event.addListener(v, "click", J(q));
          }); let C = Array(o.length).fill(!0); new window.kakao.maps.MarkerClusterer({ map: v, averageCenter: !0, minLevel: 7, minClusterSize: 5, styles: [{ minWidth: "100px", height: "80px", padding: "0px 10px", color: "rgb(255, 255, 255)", fontSize: "25px", lineHeight: "78px", textAlign: "center", borderRadius: "100px", backgroundColor: "rgb(95, 95, 95)", whiteSpace: "nowrap", position: "relative", opacity: "0.75", textShadow: "0 0 5px rgba(0,0,0,1)", zIndex: "-1000" }] }).addMarkers(u), p.isLoading = !1;
        }
      }, 100);
    }; return G(() => { h(); }), (o, e) => { const c = m("v-btn"), y = m("v-navigation-drawer"), v = m("v-icon"), u = m("v-select"), _ = m("v-snackbar"), B = m("v-dialog"), O = m("v-layout"); return a(), V(O, null, { default: f(() => [s(y, { style: { width: "100%" }, modelValue: o.drawer, "onUpdate:modelValue": e[1] || (e[1] = x => o.drawer = x), location: "right", temporary: "" }, { default: f(() => [i("p", Kt, b(g.select) + " 지역의 캠핑장 지도입니다", 1), s(c, { class: "close-btn pt-1", onClick: e[0] || (e[0] = j(x => o.drawer = !o.drawer, ["stop"])), icon: "mdi-close-thick", size: "x-large" }), Ft, p.isLoading ? (a(), V(Q, { key: 0 })) : L("", !0)]), _: 1 }, 8, ["modelValue"]), s(B, { modelValue: o.dialog, "onUpdate:modelValue": e[5] || (e[5] = x => o.dialog = x), persistent: "", width: "960" }, { activator: f(({ props: x }) => [s(c, E({ class: "show-map-btn" }, x, { size: "large", flat: "" }), { default: f(() => [s(v, { class: "show-map-icon", icon: "mdi-map-marker" }), S("지도로 검색하기 ")]), _: 2 }, 1040)]), default: f(({ isActive: x }) => [i("div", Pt, [Dt, s(u, { class: "mb-10 w-75 mx-auto", label: "캠핑지역 선택", modelValue: g.select, "onUpdate:modelValue": e[2] || (e[2] = C => g.select = C), items: n, rounded: "pill", "prepend-inner-icon": "mdi-map-marker", variant: "outlined" }, null, 8, ["modelValue"]), s(_, { timeout: 2e3, rounded: "pill" }, { activator: f(({ props: C }) => [g.select == "" ? (a(), V(c, E({ key: 0, class: "select-location-btn", text: "캠핑지도보기" }, C, { size: "x-large", flat: "" }), null, 16)) : (a(), V(c, E({ key: 1, class: "select-location-btn", onClick: [e[3] || (e[3] = j(T => (o.drawer = !o.drawer, o.dialog = !1), ["stop"])), e[4] || (e[4] = T => w(g.select))], text: "캠핑지도보기" }, C, { size: "x-large", flat: "" }), null, 16))]), default: f(() => [g.select == "" ? (a(), d("span", Ht, "지역을 선택해주세요")) : (a(), d("span", Yt, "결과 확인 중입니다."))]), _: 1 }), s(c, { class: "close-btn pt-1", onClick: C => x.value = !1, icon: "mdi-close-thick", size: "large" }, null, 8, ["onClick"])])]), _: 1 }, 8, ["modelValue"])]), _: 1 }); };
  }
}), Xt = N(Wt, [["__scopeId", "data-v-a927cbe7"]]), Gt = { name: "Search", components: { SearchOption: gt, SearchResult: jt, ShowMap: Xt }, setup() { const l = U("dataArrAll"), r = l, t = U("findArr"); return { dataArrAll: l, dataArr: r, findArr: t }; }, data() { return { items: Array.from({ length: 30 }, (l, r) => r + 1) }; }, created() { this.emitter.on("findKeyword", this.findKeyword); }, methods: { findKeyword(l) { let r = new Set; for (let t of this.dataArrAll) r.add(t); for (let t of l) { let n = new Set; for (let g = 0; g < t.indexArr.length; g++) { let w = this.findArr[t.group][t.indexArr[g]].keyword, p = this.findArr[t.group][t.indexArr[g]].category; for (let h of r) { let k = h[p].split(","); for (let o of k) o === w && n.add(h); } g == t.indexArr.length - 1 && (r = n); } } return this.dataArr = [...r], this.dataArr.length <= 30 ? this.items = Array.from({ length: this.dataArr.length }, (t, n) => n + 1) : this.items = Array.from({ length: 30 }, (t, n) => n + 1), document.querySelector(".v-infinite-scroll").scrollTo({ top: 0, behavior: "smooth" }), console.log("검색결과", this.dataArr), this.dataArr; } } }; function Qt(l, r, t, n, g, w) { const p = m("SearchOption"), h = m("v-sheet"), k = m("v-col"), o = m("SearchResult"), e = m("ShowMap"), c = m("v-row"); return a(), V(c, { height: "100vh", class: "wrap" }, { default: f(() => [s(k, { cols: "12", lg: "3" }, { default: f(() => [s(h, { class: "search-option elevation-3" }, { default: f(() => [s(p, { dataArr: n.dataArr }, null, 8, ["dataArr"])]), _: 1 })]), _: 1 }), s(k, { cols: "12", lg: "9" }, { default: f(() => [s(h, { class: "search-result elevation-3" }, { default: f(() => [s(o, { dataArr: n.dataArr, items: g.items }, null, 8, ["dataArr", "items"]), s(h, { class: "show-map" }, { default: f(() => [s(e)]), _: 1 })]), _: 1 })]), _: 1 })]), _: 1 }); } const ee = N(Gt, [["render", Qt], ["__scopeId", "data-v-a8afe229"]]); export { ee as default };
